// Top-level build file where you can add configuration options common to all sub-projects/modules.
buildscript {
    ext.kotlin_version = "1.3.72"
    repositories {
        google()
        jcenter()
        mavenCentral()
    }
    dependencies {
        classpath "com.android.tools.build:gradle:4.0.1"
        classpath "org.jetbrains.kotlin:kotlin-gradle-plugin:$kotlin_version"
        classpath "de.mannodermaus.gradle.plugins:android-junit5:1.6.2.0"
        // NOTE: Do not place your application dependencies here; they belong
        // in the individual module build.gradle files
    }
}

//apply plugin: 'java'

allprojects {
    repositories {
        google()
        jcenter()
    }
}

task clean(type: Delete) {
    delete rootProject.buildDir
}

//tasks.withType(Test) {
//    testLogging {
//        // set options for log level LIFECYCLE
//        events "passed", "skipped", "failed", "standardOut", "standardError"
//        showExceptions true
//        exceptionFormat "Full"
//        showCauses true
//        showStackTraces true
//
//        // set options for log level DEBUG and INFO
//        debug {
//            events "started", "passed", "skipped", "failed", "standardOut", "standardError"
//            exceptionFormat "Full"
//        }
//        info.events = debug.events
//        info.exceptionFormat = debug.exceptionFormat
//
//        afterSuite { desc, result ->
//            if (!desc.parent) { // will match the outermost suite
//                def output = "Results: ${result.resultType} (${result.testCount} tests, ${result.successfulTestCount} successes, ${result.failedTestCount} failures, ${result.skippedTestCount} skipped)"
//                def startItem = '|  ', endItem = '  |'
//                def repeatLength = startItem.length() + output.length() + endItem.length()
//                println('\n' + ('-' * repeatLength) + '\n' + startItem + output + endItem + '\n' + ('-' * repeatLength))
//            }
//        }
//    }
//}
